http://redisdoc.com/

什么是Redis   apache  服务器端的技术    

redis是一个nosql(not only sql不仅仅只有sql)数据库，翻译成中文叫做非关系型的缓存数据库。
键值(Key-Value)存储数据库
共有5种数据类型：  String   Hash  List  Set   SortedSet
建议在linux部署
-- 熟练命令行的指令的使用
-- 在java应用中访问redis数据库(jedis客户端)   API
-- springboot+ data redis

spring data   solr  Jpa  Redis

0至15号库

什么是nosql?
NoSQL，泛指非关系型的数据库，NoSQL即Not-Only SQL，它可以作为关系型数据库的良好补充。
随着互联网web2.0网站的兴起，非关系型的数据库现在成了一个极其热门的新领域，非关系数据库产品的发展非常迅速。
而传统的关系数据库在应付web2.0网站，特别是超大规模和高并发的SNS类型的web2.0纯动态网站已经显得力不从心，
暴露了很多难以克服的问题，例如：

1、High performance - 对数据库高并发读写的需求

web2.0网站要根据用户个性化信息来实时生成动态页面和提供动态信息，所以基本上无法使用动态页面静态化技术，
因此数据库并发负载非常高，往往要达到每秒上万次读写请求。关系数据库应付上万次SQL查询还勉强顶得住，
但是应付上万次SQL写数据请求，硬盘IO就已经无法承受了。
其实对于普通的BBS网站，往往也存在对高并发写请求的需求，
例如网站的实时统计在线用户状态，记录热门帖子的点击次数，投票计数等，因此这是一个相当普遍的需求。

2、Huge Storage - 对海量数据的高效率存储和访问的需求

类似Facebook，twitter，Friendfeed这样的SNS网站，每天用户产生海量的用户动态，
以Friendfeed为例，一个月就达到了2.5亿条用户动态，对于关系数据库来说，
在一张2.5亿条记录的表里面进行SQL查询，效率是极其低下乃至不可忍受的。
再例如大型web网站的用户登录系统，例如腾讯，盛大，动辄数以亿计的帐号，关系数据库也很难应付。

3、High Scalability && High Availability- 对数据库的高可扩展性和高可用性的需求

在基于web的架构当中，数据库是最难进行横向扩展的，当一个应用系统的用户量和访问量与日俱增的时候，
你的数据库却没有办法像web server和app server那样简单的通过添加更多的硬件和服务节点来扩展性能和负载能力。
对于很多需要提供24小时不间断服务的网站来说，对数据库系统进行升级和扩展是非常痛苦的事情，
往往需要停机维护和数据迁移，为什么数据库不能通过不断的添加服务器节点来实现扩展呢?

NoSQL数据库的产生就是为了解决大规模数据集合多重数据种类带来的挑战，尤其是大数据应用难题。

NoSQL数据库的四大分类
键值(Key-Value)存储数据库

相关产品： Tokyo Cabinet/Tyrant、Redis、Voldemort、Berkeley DB 
典型应用： 内容缓存，主要用于处理大量数据的高访问负载。 
数据模型： 一系列键值对 优势： 快速查询 
劣势： 存储的数据缺少结构化 列存储数据库

相关产品：Cassandra, HBase, Riak 
典型应用：分布式的文件系统 
数据模型：以列簇式存储，将同一列数据存在一起 优势：查找速度快，可扩展性强，更容易进行分布式扩展 劣势：功能相对局限

文档型数据库
相关产品：CouchDB、MongoDB 
典型应用：Web应用(与Key-Value类似，Value是结构化的) 
数据模型： 一系列键值对 
优势：数据结构要求不严格 
劣势： 查询性能不高，而且缺乏统一的查询语法

图形(Graph)数据库

相关数据库：Neo4J、InfoGrid、Infinite Graph 典型应用：社交网络 数据模型：图结构 优势：利用图结构相关算法。 劣势：需要对整个图做计算才能得出结果，不容易做分布式的集群方案。

3，Redis基础
redis是将数据存放到内存中,由于内容存取速度快所以redis被广泛应用在互联网项目中，
redis有点:存取速度快,官方称读取速度会达到30万次每秒,写速度在10万次每秒最有,具体限制于硬件。
缺点：对持久化支持不够良好。
数据持久化:  rdb和aof

由于Redis的数据都存放在内存中，如果没有配置持久化，redis重启后数据就全丢失了，于是需要开启redis的持久化功能，
将数据保存到磁盘上，当redis重启后，可以从磁盘中恢复数据。redis提供两种方式进行持久化，
一种是RDB持久化（原理是将Reids在内存中的数据库记录定时dump到磁盘上的RDB持久化），
另外一种是AOF持久化（原理是将Reids的操作日志以追加的方式写入文件）。

RDB持久化配置
Redis会将数据集的快照dump到dump.rdb文件中。此外，我们也可以通过配置文件来修改Redis服务器dump快照的频率，
在打开6379.conf文件之后，我们搜索save，可以看到下面的配置信息：
save 900 1           #在900秒(15分钟)之后，如果至少有1个key发生变化，则dump内存快照。
save 300 10          #在300秒(5分钟)之后，如果至少有10个key发生变化，则dump内存快照。
save 60 10000        #在60秒(1分钟)之后，如果至少有10000个key发生变化，则dump内存快照。


所以redis一般不作为数据的主数据库存储,一般配合传统的关系型数据库使用.
Redis是用C语言开发的一个开源的高性能键值对(key-value)数据库。
它通过提供多种键值数据类型来适应不同场景下的存储需求，目前为止Redis支持的键值数据类型如下：
字符串类型 散列类型 列表类型 集合类型

4，redis的应用场景
缓存(数据查询、短连接、新闻内容、商品内容等等)。 
聊天室的在线好友列表。 
任务队列。
(秒杀、抢购、12306等等) 应用排行榜。 
网站访问统计。 
数据过期处理(可以精确到毫秒)